


IBCFb2b_interwork_entry
    |
    +---case B2BUA_EVENT_1XX_INVITE
        |
        +---IBCFb2b_iw_queue_cpg(event_ptr)
        |
        +---IBCFb2b_iw_extract_msg
            |
            +---IBCFb2b_iw_extract_sip_event
            |   |
            |   +---case CCE_CNSTIND
            |       |
            |       +---IBCFb2b_iw_extract_sip_cnst_ind_event
            |           |
            |           +-----------------------------------------------+
            |                                                           |
            +---IBCFb2b_iw_extract_sipt_event                           |
                |                                                       |
                +---case CCE_CNSTIND                                    |
                    |                                                   |
                    +---IBCFb2b_iw_extract_sipt_cnst_ind_event          |
                        |                                               |
                        +-----------------------------------------------+
                                                                        |
    +-----<-------------------------<------------------<----------------+
    |
    +---IBCFb2b_iw_parse_18x
    |       |
    |       +---IBCFb2b_iw_parse_hist_info
    |           |
    |           +---IBCFb2b_iw_extract_hi_entry
    |           |
    |           +---IBCFb2b_iw_extract_2_hi_entry
    |
    |
    +---sipwTransSipCnStIndToCctFormat
        


IBCFb2b_interwork_entry   // process received 181 SIP message
    |
    +---case B2BUA_EVENT_1XX_INVITE
    |   |
    |   +---IBCFb2b_iw_queue_cpg(event_ptr)
    |   |
    |   +---IBCFb2b_iw_extract_msg
    |   |   |
    |   |   +---IBCFb2b_iw_extract_sip_event
    |   |       |
    |   |       +---case CCE_CNSTIND
    |   |           |
    |   |           +---IBCFb2b_iw_extract_sip_cnst_ind_event
    |   |               |
    |   |               +---IBCFb2b_iw_parse_18x    // when receive SIP 181, parse 181 SIP header  
    |   |               |   |
    |   |               |   +---IBCFb2b_iw_parse_hist_info   // parse history-info header 
    |   |               |       |
    |   |               |       +---IBCFb2b_iw_extract_hi_entry
    |   |               |       |
    |   |               |       +---IBCFb2b_iw_extract_2_hi_entry
    |   |               |  
    |   |               +---sipwTransSipCnStIndToCctFormat  // trans to GCC for interworking 
    |   |
    |   +---IBCFb2b_iw_map_trans_sip_msg
    |       |
    |       +---ccMapEv ent
    |       |
    |       +---case CCE_CNSTIND
    |           |
    |           +---sipwTransCctCnStReqToSipFormat // afer GCC interworking, trans to SIP to build SIP header
    |    
    |    
    +---case B2BUA_EVENT_SENDING_SIP_MSG
        |
        +---IBCFb2b_iw_build_or_update_sip_msg
            |
            +---IBCFb2b_iw_build_18x
                |
                +---IBCFb2b_iw_build_hist_info_for_rsp  // build History-Info if mapped from ISUP CFx parameter




IBCFb2b_iw_parse_hist_info
    |
    +---if (event == B2BUA_EVENT_INVITE)
        |
        +---SIPia_Supported_FindOption(msg_ptr, SIP_OPTION_HISTINFO) // check if there is "Supported: histinfo"
        |
        +---iw_info->supportHist = TRUE; // set if there is "Supported: histinfo" for mapping AC?CPG to 181

    |
    +---1. parse and save hi-entry in History-Info header 
        |
        +---remove any hi-entry with invalid hi-index,
        |
        +---remove any hi-entry in TEL URI format in this release 
            |
            +---will keep valid one in further release, valid/invalid example is list in section 4 above
        |
        +---save valid one to entry_array[] in SIP_HistoryInfo format 
        |
        +---save valid one to hc_ptr_array[] in SIP_Header_w_Index format, which is a combine SIP_Header and hi_index(DString)
        |
        +---also, save received valid hi-entry in initial INVITE to iw_info->HistoryInfoVect

    |
    +---2. sort the saved hi-entry in entry_array[] and hc_ptr_array[] and HistoryInfoVect by index with ascending order.
        |
        +---sort(iw_info->HistoryInfoVect->begin(), iw_info->HistoryInfoVect->end());
        |
        +---sort(entry_array, entry_array + hdr_cnt, HistoryInfo_CompareLess);
        |
        +---sort(hc_ptr_array, hc_ptr_array + hdr_cnt, HistoryInfo_CompareLess_in_SIPHeader);
        |
        +---NOTE: entry_array[] and hc_ptr_array[] are duplicate information with the same hi-index order, 
            but for different.
    |
    +---3. go through the saved entry_array[] to find the redirecting hi-entry and diverted-to hi-entry
        |
        +---divert_idx // indicate index of element(in entry_array[]) which is diverted-to hi-entry;
            diverted-to hi-entry is the hi-entry following the last hi-targeted-to-uri with Reason,
            so, there is no Reason in diverted-to, if the last hi-targeted-to-uri is with reason, 
            , there will be no diverted-to, divert_idx will be set to -1.
            when diverted-to is found by "following the last hi-targeted-to-uri is with reason", and
            there is "mp" in diverted-to hi-targeted-to-uri, then use "mp" to search all w/ reason hi-entry,
            |
            +--IBCFb2b_iw_match_hi_entry_by_mp          
                |
                +---if found the hi-entry, update redir_idx to the found index in entry_array[].
    |        
    |        
    +---populate the diversion struct, to be used for GCC for interworking 
        |
        +---0 History-Info:
        |   |
        |   +---no need to do interworking for History-Info and ISUP CFx parameters
        |   
        +---1 History-Info:
            |
            +---IBCFb2b_iw_extract_hi_entry  // extract history-info to div structure
        |
        +---more History-Info:
            |
            +---for 181, support746Fmt is true
                |
                +---if there is diverted(>=0), 
                    |
                    +---IBCFb2b_iw_extract_2_hi_entry(event_ptr, entry_array, divert_idx, redir_idx,div, &div->topDivHostName);
                |
                +---else if there is no diverted(-1), but has redir_idx
                    |
                    +---IBCFb2b_iw_extract_hi_entry(msg_ptr, entry_array[redir_idx], &div->topDivNum, &div->topDivReason,
                                                    &div->topPrivacy, &div->topDivType, &div->topDivHostName, NULL,
                                                    &div->topDivCause, NULL, &div->notSubOptions);
                |
                +---the INVITE, support746Fmt is false
                    |
                    +---if there is top_idx: 
                        |
                        +---IBCFb2b_iw_extract_hi_entry
                    |
                    +---if there is bottom idx, bot_idx and bot_idx is not top_idx
                        |
                        +---IBCFb2b_iw_extract_hi_entry


